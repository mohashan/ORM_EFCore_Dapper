// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ORM.EFCore;

#nullable disable

namespace ORM.EFCore.Migrations
{
    [DbContext(typeof(PublisherDbContext))]
    partial class PublisherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ORM.Model.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Saadi"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hafez"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ferdowsi"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Khayam"
                        });
                });

            modelBuilder.Entity("ORM.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Description = "",
                            Price = 2000000,
                            Title = "Golestan Saadi"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Description = "",
                            Price = 1000000,
                            Title = "Ghazaliat Hafez"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Description = "",
                            Price = 3000000,
                            Title = "Shahnameh Ferdowsi"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            Description = "",
                            Price = 1500000,
                            Title = "Robaeyat Khayam"
                        });
                });

            modelBuilder.Entity("ORM.Model.Book", b =>
                {
                    b.HasOne("ORM.Model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("ORM.Model.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
